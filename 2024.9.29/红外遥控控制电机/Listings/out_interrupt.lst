C51 COMPILER V9.60.7.0   OUT_INTERRUPT                                                     09/29/2024 15:56:59 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE OUT_INTERRUPT
OBJECT MODULE PLACED IN .\Objects\out_interrupt.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE out_interrupt.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\out_interrupt.lst) TABS(2) OBJECT(.\Objects\out_interrupt.obj)

line level    source

   1          #include "out_interrupt.h"
   2          unsigned char state;//电平状态
   3          unsigned int count;//计数器0计的数
   4          unsigned char ARR[4];//解码之后的四个数存储
   5          unsigned char date;//数组下标
   6          unsigned char address;//地址码
   7          unsigned char commend;//命令码
   8          unsigned char dateflage;//得到数据的标志
   9          unsigned char repeatflage;//连发的标志
  10          //unsigned char i,j;//i为四个数的循环，j为八位字节循环
  11          void out_Init()
  12          {
  13   1        IT0=1;
  14   1        IE0=0;
  15   1        EX0=1;
  16   1        EA=1;
  17   1        PX0=1;
  18   1      }
  19          unsigned char out0_getdateflage(){
  20   1        if(dateflage){
  21   2          dateflage=0;
  22   2          return 1;
  23   2        }
  24   1        return 0;
  25   1      }
  26          unsigned char out0_getrepeatflage(){
  27   1        if(repeatflage)
  28   1        {
  29   2          repeatflage=0;
  30   2          return 1;
  31   2        }
  32   1        return 0;
  33   1      }
  34          unsigned char out0_returnadd()//返回地址码
  35          {
  36   1        return address;
  37   1      }
  38          unsigned char out0_returncom()//返回命令码
  39          {
  40   1        return commend;
  41   1      }
  42          void out0() interrupt 0
  43          {
  44   1        if(state==0){//空闲状态
  45   2          time0_set(0);//设置计数器0从0开始计数
  46   2          time0_con(1);//设置计数器0开始记数
  47   2          state=1;//转化为状态1 即收到红外信号状态
  48   2        }
  49   1        else if(state==1){
  50   2          count=time0_return();
  51   2          time0_set(0);
  52   2          if(count>=12442-500&&count<=12442+500){//若count在9ms+4.5ms计数范围之内转化为状态2
  53   3            //即开始解码状态
  54   3            state=2;
C51 COMPILER V9.60.7.0   OUT_INTERRUPT                                                     09/29/2024 15:56:59 PAGE 2   

  55   3          }
  56   2          else if(count>=10368-500&&count<=10368+500){//若在9ms+2.25ms计数范围之内转化为状态0
  57   3            //即重新接受信号状态  
  58   3            repeatflage=1;
  59   3            time0_con(0);//关闭计数器
  60   3            state=0;
  61   3          }else
  62   2          {
  63   3            state=1;
  64   3          }
  65   2          }
  66   1        else if(state==2){
  67   2      //    for(i=0;i<4;i++){
  68   2      //      for(j=0;j<8;j++){
  69   2              count=time0_return();
  70   2              time0_set(0);
  71   2              if(count>=2074-500&&count<=2074+500){//收到数据1
  72   3      //          ARR[i]|=(0x01<<j);
  73   3              ARR[date/8]|=(0x01<<(date%8));
  74   3                date++;
  75   3              }
  76   2              else if(count>=1032-500&&count<=1032+500){//收到数据0
  77   3      //          ARR[i]&=~(0x01<<j);
  78   3              ARR[date/8]&=~(0x01<<(date%8));
  79   3                date++;
  80   3              }
  81   2              else{//既没有收到数据1也没有收到数据0 
  82   3              date=0;
  83   3              state=1;
  84   3              }
  85   2      //      }
  86   2      //    }
  87   2              if(date>=32){
  88   3          date=0;
  89   3          if((ARR[0]==~ARR[1])&&(ARR[2]==~ARR[3])){ P2=0;
  90   4            //判断数据是否正确
  91   4          address=ARR[0];
  92   4          commend=ARR[2];
  93   4            dateflage=1;
  94   4          }
  95   3          time0_con(0);
  96   3          state=0;
  97   3        }
  98   2        }
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    380    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
